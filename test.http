# test

### requete get pour récupérer toutes les randonnées par page de 10 randonnées

GET http://localhost:4000/hikes?page=1
Accept: application/json

### requete get pour récupérer 4 randonnées de maniere aléatoire

GET http://localhost:4000/hikes/random
Accept: application/json

### requete get pour récuperer les randonnée d'un utilisateurs mise en favoris

GET http://localhost:4000/bookmarks/1
Accept: application/json



### Test de la requete update users

PATCH http://localhost:4000/users/1
Content-Type: application/json

{
  "id": 1,
  "nickname": "skylilou",
  "localisation": "En bas de chez moi",
  "email": "skylou@hotmail.fr",
  "password": "Newskylarpass"
}

### Test pour obtenir l'email d'un utilisateur
Get http://localhost:4000/users/8


### Test pour crée un utilisateur avec scrypt (password)
POST http://localhost:4000/users
Content-Type: application/json

{
  "id": 1,
  "nickname": "Coucou Seb2",
  "localisation": "En bas de chez toi Seb2 ",
  "email": "Seblovers2@hotmail.fr",
  "password": "lapinouProject2"
}

### Test pour supprimé un utilisateur
DELETE http://localhost:4000/users/8
Content-Type: application/json

{
  "id": 1
  "password": "lapinouProject2@"
}

### Login and get JWT token
POST http://localhost:4000/auth/jwt
Content-Type: application/json

{
  "email": "Seblovers2@hotmail.fr",
  "password": "lapinouProject2@"
}

### Use the obtained JWT to add a bookmark
POST http://localhost:4000/bookmarks
Content-Type: application/json
Authorization: Bearer your_jwt_token_here

{
  "userId": 4,
  "hikeId": 1
}

### Refresh the JWT token
POST http://localhost:4000/auth/refresh-token
Content-Type: application/json

{
  "refreshToken": "your_refresh_token_here"
}